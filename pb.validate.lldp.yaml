---
- name: Validate
  hosts: fabric
  connection: local
  gather_facts: no
  vars_files:
   - ./all_manual/ports.yaml
  tasks:
  - name: "Generate validation rules"
    template:
      src: "./templates/validate/lldp.j2"
      dest: "./tmp/{{ inventory_hostname }}.yaml"
    changed_when: no
    check_mode: no
  - name: "Read validation rules, gather data and verify it against rules"
    ignore_errors: yes
    napalm_validate:
      hostname: "{{ ansible_ssh_host }}"
      username: "root"
      dev_os: "{{ os }}"
      password: "Juniper"
      optional_args:
        port: "{{ ansible_ssh_port }}"
      validation_file: "./tmp/{{ inventory_hostname }}.yaml"
    register: validation
  - name: "Failed report"
    debug:
      msg: "{{ validation.compliance_report|to_nice_json }}"
    when: not validation.compliance_report.complies
    tags: [print_action]
  - name: "prepare report file"
    file: path=./reports/lldp.report state=absent
  - name: "Failed Compliance Report save"
    blockinfile:
      path: ./reports/lldp.report
      create: yes
      marker: "###{{ inventory_hostname }} FAILED CONNECTIONS###"
      block: |
        {% for name,state in validation.compliance_report.get_lldp_neighbors.present.items() %}
        {% if not state.complies %}
        ------
        PORT {{ name }}
        ACTUAL   CONNECTION  DEVICE {{ state.actual_value[0].hostname }} PORT {{ state.actual_value[0].port }}
        EXPECTED CONNECTION  DEVICE {{ state.expected_value[0].hostname }} PORT {{ state.expected_value[0].port }}
        {% endif %}
        {% endfor %}
    delegate_to: "{{item}}"
    run_once: true
    with_inventory_hostnames: fabric
    when: not validation.compliance_report.complies
  - name: "Failed Compliance Report"
    fail:
      msg: "{{ validation.compliance_report|to_nice_json }}"
    when: not validation.compliance_report.complies
  - name: "Compliance report"
    debug:
      msg: "Complies"
    when: validation.compliance_report.complies
    tags: [print_action]
  - name: 'delete files'
    file: path=./tmp/{{ inventory_hostname }}.yaml state=absent
